{"version":3,"sources":["../../../../src/steps/source-nodes/create-nodes/create-nodes.js"],"names":["createNodesQueue","PQueue","concurrency","createNodeWithSideEffects","node","state","wpgqlNodesGroup","referencedMediaItemNodeIds","Set","createdNodeIds","createNodesActivity","totalSideEffectNodes","type","wpUrl","remoteSchema","helpers","pluginOptions","gatsbyApi","actions","createContentDigest","link","path","plural","remoteNode","id","parent","internal","contentDigest","typeSettings","name","beforeChangeNode","additionalNodeIds","changedRemoteNode","actionType","fetchGraphql","buildTypeName","wpStore","store","length","forEach","push","setStatus","createNode","createGatsbyNodesFromWPGQLContentNodes","wpgqlNodesByContentType","getState","reporter","dispatch","logger","createActivityTimer","typeName","wpgqlNodes","allNodesOfContentType","values","add","onIdle","referencedMediaItemNodeIdsArray","MediaItem","lazyNodes","stopActivityTimer"],"mappings":"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","sourcesContent":["import PQueue from \"p-queue\"\nimport fetchReferencedMediaItemsAndCreateNodes from \"../fetch-nodes/fetch-referenced-media-items\"\nimport urlToPath from \"~/utils/url-to-path\"\nimport store from \"~/store\"\nimport fetchGraphql from \"~/utils/fetch-graphql\"\n\nimport {\n  buildTypeName,\n  getTypeSettingsByType,\n} from \"~/steps/create-schema-customization/helpers\"\nimport { processNode } from \"./process-node\"\n\n// @todo concurrency is currently set so low because side effects can overwhelm\n// the remote server. A queue for the entire source plugin should be created so that\n// everything can share a queue and we can speed some of these things up\nconst createNodesQueue = new PQueue({\n  concurrency: 2,\n})\n\nexport const createNodeWithSideEffects = ({\n  node,\n  state,\n  wpgqlNodesGroup = null,\n  referencedMediaItemNodeIds = new Set(),\n  createdNodeIds = [],\n  createNodesActivity = null,\n  totalSideEffectNodes = null,\n  type = null,\n}) => async () => {\n  const { wpUrl } = state.remoteSchema\n  const { helpers, pluginOptions } = state.gatsbyApi\n\n  const { actions, createContentDigest } = helpers\n\n  if (node.link) {\n    // @todo is this still necessary? I don't think it is but double check\n    // create a pathname for the node using the WP permalink\n    node.path = urlToPath(node.link)\n  }\n\n  if (wpgqlNodesGroup?.plural !== `mediaItems`) {\n    node = await processNode({\n      node,\n      pluginOptions,\n      referencedMediaItemNodeIds,\n      wpUrl,\n      helpers,\n    })\n  }\n\n  let remoteNode = {\n    ...node,\n    id: node.id,\n    parent: null,\n    internal: {\n      contentDigest: createContentDigest(node),\n      type: type || buildTypeName(node.type),\n    },\n  }\n\n  const typeSettings = getTypeSettingsByType({\n    name: node.type,\n  })\n\n  if (typeof typeSettings?.beforeChangeNode === `function`) {\n    const { additionalNodeIds, remoteNode: changedRemoteNode } =\n      (await typeSettings.beforeChangeNode({\n        actionType: `CREATE_ALL`,\n        remoteNode,\n        actions,\n        helpers,\n        type: node.type,\n        fetchGraphql,\n        typeSettings,\n        buildTypeName,\n        wpStore: store,\n      })) || {}\n\n    if (changedRemoteNode) {\n      remoteNode = changedRemoteNode\n    }\n\n    if (additionalNodeIds?.length && totalSideEffectNodes) {\n      additionalNodeIds.forEach(\n        (id) => createdNodeIds.push(id) && totalSideEffectNodes.push(id)\n      )\n    }\n\n    if (\n      totalSideEffectNodes &&\n      typeof totalSideEffectNodes?.length === `number` &&\n      totalSideEffectNodes.length > 0 &&\n      createNodesActivity\n    ) {\n      createNodesActivity.setStatus(\n        `awaiting async side effects - ${totalSideEffectNodes.length} additional nodes fetched`\n      )\n    }\n  }\n\n  await actions.createNode(remoteNode)\n\n  createdNodeIds.push(node.id)\n}\n\nexport const createGatsbyNodesFromWPGQLContentNodes = async ({\n  wpgqlNodesByContentType,\n  createNodesActivity,\n}) => {\n  const state = store.getState()\n  const { helpers, pluginOptions } = state.gatsbyApi\n\n  const { reporter } = helpers\n\n  // wp supports these file extensions\n  // jpeg|jpg|png|gif|ico|pdf|doc|docx|ppt|pptx|pps|ppsx|odt|xls|psd|mp3|m4a|ogg|wav|mp4|m4v|mov|wmv|avi|mpg|ogv|3gp|3g2|svg|bmp|tif|tiff|asf|asx|wm|wmx|divx|flv|qt|mpe|webm|mkv|txt|asc|c|cc|h|csv|tsv|ics|rtx|css|htm|html|m4b|ra|ram|mid|midi|wax|mka|rtf|js|swf|class|tar|zip|gz|gzip|rar|7z|exe|pot|wri|xla|xlt|xlw|mdb|mpp|docm|dotx|dotm|xlsm|xlsb|xltx|xltm|xlam|pptm|ppsm|potx|potm|ppam|sldx|sldm|onetoc|onetoc2|onetmp|onepkg|odp|ods|odg|odc|odb|odf|wp|wpd|key|numbers|pages\n\n  // gatsby-image supports these file types\n  // const imgSrcRemoteFileRegex = /<img.*?src=\\\\\"(.*?jpeg|jpg|png|webp|tif|tiff$)\\\\\"[^>]+>/gim\n\n  store.dispatch.logger.createActivityTimer({\n    typeName: `MediaItem`,\n    pluginOptions,\n    reporter,\n  })\n\n  const createdNodeIds = []\n  const totalSideEffectNodes = []\n  const referencedMediaItemNodeIds = new Set()\n\n  for (const wpgqlNodesGroup of wpgqlNodesByContentType) {\n    const wpgqlNodes = wpgqlNodesGroup.allNodesOfContentType\n\n    for (const node of wpgqlNodes.values()) {\n      createNodesQueue.add(\n        createNodeWithSideEffects({\n          state,\n          node,\n          wpgqlNodesGroup,\n          referencedMediaItemNodeIds,\n          createdNodeIds,\n          createNodesActivity,\n          totalSideEffectNodes,\n        })\n      )\n    }\n  }\n\n  await createNodesQueue.onIdle()\n\n  const referencedMediaItemNodeIdsArray = [...referencedMediaItemNodeIds]\n\n  /**\n   * if we're not lazy fetching media items, we need to fetch them\n   * upfront here\n   */\n  if (\n    !pluginOptions.type.MediaItem.lazyNodes &&\n    referencedMediaItemNodeIdsArray.length\n  ) {\n    await fetchReferencedMediaItemsAndCreateNodes({\n      referencedMediaItemNodeIds: referencedMediaItemNodeIdsArray,\n    })\n\n    store.dispatch.logger.stopActivityTimer({\n      typeName: `MediaItem`,\n    })\n\n    return [...createdNodeIds, ...referencedMediaItemNodeIdsArray]\n  }\n\n  store.dispatch.logger.stopActivityTimer({\n    typeName: `MediaItem`,\n  })\n\n  return createdNodeIds\n}\n"],"file":"create-nodes.js"}