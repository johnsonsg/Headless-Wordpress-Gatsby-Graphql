{"version":3,"sources":["../../../../src/steps/source-nodes/update-nodes/fetch-node-updates.js"],"names":["touchValidNodes","helpers","actions","validNodeIds","key","CREATED_NODE_IDS","length","forEach","nodeId","touchNode","fetchAndApplyNodeUpdates","since","throwFetchErrors","throwGqlErrors","pluginOptions","cache","reporter","activity","activityTimer","start","get","LAST_COMPLETED_SOURCE_TIME","wpActions","didUpdate","end"],"mappings":";;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEO,MAAMA,eAAe,GAAG,YAAY;AACzC,QAAM;AAAEC,IAAAA;AAAF,MAAc,iCAApB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcD,OAApB;AAEA,QAAME,YAAY,GAAG,MAAM,+BAAmB;AAAEC,IAAAA,GAAG,EAAEC;AAAP,GAAnB,CAA3B;;AAEA,MAAIF,YAAJ,aAAIA,YAAJ,uBAAIA,YAAY,CAAEG,MAAlB,EAA0B;AACxBH,IAAAA,YAAY,CAACI,OAAb,CAAsBC,MAAD,IAAYN,OAAO,CAACO,SAAR,CAAkB;AAAED,MAAAA;AAAF,KAAlB,CAAjC;AACD;AACF,CATM;AAWP;;;;;;;;;;;AAOA,MAAME,wBAAwB,GAAG,OAAO;AACtCC,EAAAA,KADsC;AAEtCC,EAAAA,gBAAgB,GAAG,KAFmB;AAGtCC,EAAAA,cAAc,GAAG;AAHqB,CAAP,KAI3B;AACJ,QAAM;AAAEZ,IAAAA,OAAF;AAAWa,IAAAA;AAAX,MAA6B,iCAAnC;AAEA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBf,OAA5B;AAEA,QAAMgB,QAAQ,GAAGD,QAAQ,CAACE,aAAT,CACf,wCAAkB,+BAAlB,CADe,CAAjB;AAGAD,EAAAA,QAAQ,CAACE,KAAT;;AAEA,MAAI,CAACR,KAAL,EAAY;AACVA,IAAAA,KAAK,GAAG,MAAMI,KAAK,CAACK,GAAN,CAAUC,qCAAV,CAAd;AACD,GAZG,CAcJ;;;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA2B,MAAM,qCAAqB;AAC1DZ,IAAAA,KAD0D;AAE1DV,IAAAA,OAF0D;AAG1Da,IAAAA,aAH0D;AAI1DF,IAAAA,gBAJ0D;AAK1DC,IAAAA;AAL0D,GAArB,CAAvC;AAQA,QAAMb,eAAe,EAArB;AAEAiB,EAAAA,QAAQ,CAACO,GAAT;AAEA,SAAO;AAAEF,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAAP;AACD,CAhCD;;eAkCeb,wB","sourcesContent":["import { CREATED_NODE_IDS, LAST_COMPLETED_SOURCE_TIME } from \"~/constants\"\nimport { fetchAndRunWpActions } from \"./wp-actions\"\nimport { formatLogMessage } from \"~/utils/format-log-message\"\nimport { getGatsbyApi } from \"~/utils/get-gatsby-api\"\nimport { getPersistentCache } from \"~/utils/cache\"\n\nexport const touchValidNodes = async () => {\n  const { helpers } = getGatsbyApi()\n  const { actions } = helpers\n\n  const validNodeIds = await getPersistentCache({ key: CREATED_NODE_IDS })\n\n  if (validNodeIds?.length) {\n    validNodeIds.forEach((nodeId) => actions.touchNode({ nodeId }))\n  }\n}\n\n/**\n * fetchAndApplyNodeUpdates\n *\n * uses query info (types and gql query strings) fetched/generated in\n * onPreBootstrap to ask WordPress for the latest changes, and then\n * apply creates, updates, and deletes to Gatsby nodes\n */\nconst fetchAndApplyNodeUpdates = async ({\n  since,\n  throwFetchErrors = false,\n  throwGqlErrors = false,\n}) => {\n  const { helpers, pluginOptions } = getGatsbyApi()\n\n  const { cache, reporter } = helpers\n\n  const activity = reporter.activityTimer(\n    formatLogMessage(`pull updates since last build`)\n  )\n  activity.start()\n\n  if (!since) {\n    since = await cache.get(LAST_COMPLETED_SOURCE_TIME)\n  }\n\n  // Check with WPGQL to create, delete, or update cached WP nodes\n  const { wpActions, didUpdate } = await fetchAndRunWpActions({\n    since,\n    helpers,\n    pluginOptions,\n    throwFetchErrors,\n    throwGqlErrors,\n  })\n\n  await touchValidNodes()\n\n  activity.end()\n\n  return { wpActions, didUpdate }\n}\n\nexport default fetchAndApplyNodeUpdates\n"],"file":"fetch-node-updates.js"}