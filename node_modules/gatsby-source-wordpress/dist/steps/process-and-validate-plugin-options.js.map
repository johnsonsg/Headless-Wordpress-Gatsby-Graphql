{"version":3,"sources":["../../src/steps/process-and-validate-plugin-options.ts"],"names":["optionsProcessors","name","test","userPluginOptions","type","MediaItem","limit","processor","helpers","reporter","panic","schema","queryDepth","log","warn","useVerboseStyle","processAndValidatePluginOptions","pluginOptions","forEach","toString","filteredUserPluginOptions"],"mappings":";;;;;;;AAAA;;AACA;;AAcA,MAAMA,iBAA2C,GAAG,CAClD;AACEC,EAAAA,IAAI,EAAG,mDADT;AAEEC,EAAAA,IAAI,EAAE,CAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA;;AAAA,WACJ,CAAC,EAACA,iBAAD,aAACA,iBAAD,gDAACA,iBAAiB,CAAEC,IAApB,oFAAC,sBAAyBC,SAA1B,2DAAC,uBAAoCC,KAArC,CADG;AAAA,GAFR;AAIEC,EAAAA,SAAS,EAAE,CAAC;AAAEC,IAAAA,OAAF;AAAWL,IAAAA;AAAX,GAAD,KAA0C;AAAA;;AACnDK,IAAAA,OAAO,CAACC,QAAR,CAAiBC,KAAjB,CACE,wCACG,wJAAuJP,iBAAxJ,aAAwJA,iBAAxJ,iDAAwJA,iBAAiB,CAAEC,IAA3K,qFAAwJ,uBAAyBC,SAAjL,2DAAwJ,uBAAoCC,KAAM,uLADpM,CADF;AAKD;AAVH,CADkD,EAalD;AACEL,EAAAA,IAAI,EAAG,kCADT;AAEEC,EAAAA,IAAI,EAAE,CAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA;;AAAA,WACJ,QAAOA,iBAAP,aAAOA,iBAAP,gDAAOA,iBAAiB,CAAEQ,MAA1B,0DAAO,sBAA2BC,UAAlC,MAAkD,WAAlD,KACC,CAAC,wBAAUT,iBAAV,aAAUA,iBAAV,iDAAUA,iBAAiB,CAAEQ,MAA7B,2DAAU,uBAA2BC,UAArC,CAAD,IACC,CAAAT,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,sCAAAA,iBAAiB,CAAEQ,MAAnB,kFAA2BC,UAA3B,KAAyC,CAF3C,CADI;AAAA,GAFR;AAMEL,EAAAA,SAAS,EAAE,CAAC;AACVC,IAAAA,OADU;AAEVL,IAAAA;AAFU,GAAD,KAG8B;AACvCK,IAAAA,OAAO,CAACC,QAAR,CAAiBI,GAAjB,CAAsB,EAAtB;AACAL,IAAAA,OAAO,CAACC,QAAR,CAAiBK,IAAjB,CACE,wCACG,mHADH,EAEE;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAFF,CADF;AAOA,WAAOZ,iBAAiB,CAACQ,MAAlB,CAAyBC,UAAhC;AAEA,WAAOT,iBAAP;AACD;AArBH,CAbkD,CAApD;;AAsCO,MAAMa,+BAA+B,GAAG,CAC7CR,OAD6C,EAE7CS,aAF6C,KAG1B;AACnB,MAAId,iBAAiB,GAAG,EACtB,GAAGc;AADmB,GAAxB;AAIAjB,EAAAA,iBAAiB,CAACkB,OAAlB,CAA0B,CAAC;AAAEhB,IAAAA,IAAF;AAAQK,IAAAA,SAAR;AAAmBN,IAAAA;AAAnB,GAAD,KAA+B;AACvD,QAAI,CAACA,IAAL,EAAW;AACTO,MAAAA,OAAO,CAACC,QAAR,CAAiBC,KAAjB,CACE,wCACG,sCAAqCR,IAAI,CAACiB,QAAL,EAAgB,OAAMZ,SAAS,CAACY,QAAV,EAAqB,EADnF,CADF;AAKD;;AAED,QAAIjB,IAAI,CAAC;AAAEM,MAAAA,OAAF;AAAWL,MAAAA;AAAX,KAAD,CAAR,EAA0C;AACxC,YAAMiB,yBAAyB,GAAGb,SAAS,CAAC;AAC1CC,QAAAA,OAD0C;AAE1CL,QAAAA;AAF0C,OAAD,CAA3C;;AAKA,UAAIiB,yBAAJ,EAA+B;AAC7BjB,QAAAA,iBAAiB,GAAGiB,yBAApB;AACD,OAFD,MAEO;AACLZ,QAAAA,OAAO,CAACC,QAAR,CAAiBC,KAAjB,CACE,wCACG,wBAAuBT,IAAK,0CAD/B,CADF;AAKD;AACF;AACF,GAzBD;AA2BA,SAAOE,iBAAP;AACD,CApCM","sourcesContent":["import { formatLogMessage } from \"~/utils/format-log-message\"\nimport isInteger from \"lodash/isInteger\"\nimport { IPluginOptions } from \"~/models/gatsby-api\"\nimport { GatsbyNodeApiHelpers } from \"~/utils/gatsby-types\"\ninterface IProcessorOptions {\n  userPluginOptions: IPluginOptions\n  helpers: GatsbyNodeApiHelpers\n}\n\ninterface IOptionsProcessor {\n  name: string\n  test: (options: IProcessorOptions) => boolean\n  processor: (options: IProcessorOptions) => IPluginOptions | void\n}\n\nconst optionsProcessors: Array<IOptionsProcessor> = [\n  {\n    name: `pluginOptions.type.MediaItem.limit is not allowed`,\n    test: ({ userPluginOptions }): boolean =>\n      !!userPluginOptions?.type?.MediaItem?.limit,\n    processor: ({ helpers, userPluginOptions }): void => {\n      helpers.reporter.panic(\n        formatLogMessage(\n          `PluginOptions.type.MediaItem.limit is an disallowed plugin option.\\nPlease remove the MediaItem.limit option from gatsby-config.js (currently set to ${userPluginOptions?.type?.MediaItem?.limit})\\n\\nMediaItem nodes are automatically limited to 0 and then fetched only when referenced by other node types. For example as a featured image, in custom fields, or in post_content.`\n        )\n      )\n    },\n  },\n  {\n    name: `queryDepth-is-not-a-positive-int`,\n    test: ({ userPluginOptions }: IProcessorOptions): boolean =>\n      typeof userPluginOptions?.schema?.queryDepth !== `undefined` &&\n      (!isInteger(userPluginOptions?.schema?.queryDepth) ||\n        userPluginOptions?.schema?.queryDepth <= 0),\n    processor: ({\n      helpers,\n      userPluginOptions,\n    }: IProcessorOptions): IPluginOptions => {\n      helpers.reporter.log(``)\n      helpers.reporter.warn(\n        formatLogMessage(\n          `\\n\\npluginOptions.schema.queryDepth is not a positive integer.\\nUsing default value in place of provided value.\\n`,\n          { useVerboseStyle: true }\n        )\n      )\n\n      delete userPluginOptions.schema.queryDepth\n\n      return userPluginOptions\n    },\n  },\n]\n\nexport const processAndValidatePluginOptions = (\n  helpers: GatsbyNodeApiHelpers,\n  pluginOptions: IPluginOptions\n): IPluginOptions => {\n  let userPluginOptions = {\n    ...pluginOptions,\n  }\n\n  optionsProcessors.forEach(({ test, processor, name }) => {\n    if (!name) {\n      helpers.reporter.panic(\n        formatLogMessage(\n          `Plugin option filter is unnamed\\n\\n${test.toString()}\\n\\n${processor.toString()}`\n        )\n      )\n    }\n\n    if (test({ helpers, userPluginOptions })) {\n      const filteredUserPluginOptions = processor({\n        helpers,\n        userPluginOptions,\n      })\n\n      if (filteredUserPluginOptions) {\n        userPluginOptions = filteredUserPluginOptions\n      } else {\n        helpers.reporter.panic(\n          formatLogMessage(\n            `Plugin option filter ${name} didn't return a filtered options object`\n          )\n        )\n      }\n    }\n  })\n\n  return userPluginOptions\n}\n"],"file":"process-and-validate-plugin-options.js"}