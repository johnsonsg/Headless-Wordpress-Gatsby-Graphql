{"version":3,"sources":["../../../src/steps/create-schema-customization/type-filters.js"],"names":["typeDefinitionFilters","typeName","typeDef","fields","date","dateField","type","extensions","dateformat","dateGmt","modified","modifiedGmt","objectType","remoteFile","deprecationReason","resolve","Error","localFile","mediaItemNode","_","context","localMediaNodeId","id","node","nodeModel","getNodeById","parentName"],"mappings":"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","sourcesContent":["import { createRemoteMediaItemNode } from \"~/steps/source-nodes/create-nodes/create-remote-media-item-node\"\n\n// @todo move this to plugin options\nexport const typeDefinitionFilters = [\n  {\n    typeName: `__all`,\n    typeDef: typeDef => {\n      /**\n       * @todo once WPGraphQL has a DateTime Scalar, use that to find date fields\n       * instead of the below fieldnames\n       */\n\n      if (typeDef?.fields?.date) {\n        const dateField = {\n          ...typeDef.fields.date,\n          type: `Date`,\n          extensions: {\n            dateformat: {},\n          },\n        }\n\n        typeDef.fields.date = dateField\n      }\n\n      if (typeDef?.fields?.dateGmt) {\n        const dateField = {\n          ...typeDef.fields.dateGmt,\n          type: `Date`,\n          extensions: {\n            dateformat: {},\n          },\n        }\n\n        typeDef.fields.dateGmt = dateField\n      }\n\n      if (typeDef?.fields?.modified) {\n        const dateField = {\n          ...typeDef.fields.modified,\n          type: `Date`,\n          extensions: {\n            dateformat: {},\n          },\n        }\n\n        typeDef.fields.modified = dateField\n      }\n\n      if (typeDef?.fields?.modifiedGmt) {\n        const dateField = {\n          ...typeDef.fields.modifiedGmt,\n          type: `Date`,\n          extensions: {\n            dateformat: {},\n          },\n        }\n\n        typeDef.fields.modifiedGmt = dateField\n      }\n\n      return typeDef\n    },\n  },\n  {\n    typeName: `MediaItem`,\n    typeDef: objectType => {\n      // @todo: this field is deprecated as of 0.1.8, remove this when we get to beta\n      objectType.fields.remoteFile = {\n        type: `File`,\n        deprecationReason: `MediaItem.remoteFile was renamed to localFile`,\n        resolve: () => {\n          throw new Error(\n            `MediaItem.remoteFile is deprecated and has been renamed to MediaItem.localFile. Please update your code.`\n          )\n        },\n      }\n\n      objectType.fields.localFile = {\n        type: `File`,\n        resolve: (mediaItemNode, _, context) => {\n          if (!mediaItemNode) {\n            return null\n          }\n\n          const localMediaNodeId = mediaItemNode?.localFile?.id\n\n          if (localMediaNodeId) {\n            const node = context.nodeModel.getNodeById({\n              id: mediaItemNode.localFile.id,\n              type: `File`,\n            })\n\n            if (node) {\n              return node\n            }\n          }\n\n          return createRemoteMediaItemNode({\n            mediaItemNode,\n            parentName: `Creating File node while resolving missing MediaItem.localFile`,\n          })\n        },\n      }\n\n      return objectType\n    },\n  },\n]\n"],"file":"type-filters.js"}